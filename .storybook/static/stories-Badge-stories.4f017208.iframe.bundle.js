"use strict";(self.webpackChunk_operatiemobilisatie_ui=self.webpackChunk_operatiemobilisatie_ui||[]).push([[544],{"./src/stories/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Destructive:()=>Destructive,Info:()=>Info,Outline:()=>Outline,Primary:()=>Primary,Secondary:()=>Secondary,Small:()=>Small,Success:()=>Success,Warning:()=>Warning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Badge_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),utils=__webpack_require__("./src/lib/utils.ts");const badgeVariants=(0,dist.F)("inline-flex items-center rounded-full border py-px uppercase font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-white hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",success:"border-transparent bg-success text-success-foreground hover:bg-success/80",warning:"border-transparent bg-warning text-warning-foreground",info:"border-transparent bg-info text-info-foreground",outline:"text-foreground"},size:{sm:"text-xs px-2",default:"text-sm px-2.5"}},defaultVariants:{variant:"default",size:"default"}});function Badge({className,size,variant,...props}){return react.createElement("div",{className:(0,utils.cn)(badgeVariants({variant,size}),className),...props})}Badge.__docgenInfo={description:"",methods:[],displayName:"Badge",composes:["VariantProps"]};const Badge_stories={title:"Data Display/Badge",component:Badge,parameters:{layout:"centered",docs:{description:{component:"A badge is a small component that displays a label with a visual style."}}},tags:["autodocs"],argTypes:{variant:{control:"select",options:["default","secondary","destructive","success","warning","info","outline"],description:"The visual style of the badge",table:{defaultValue:{summary:"default"}}},size:{control:"select",options:["default","sm"],description:"The size of the badge",table:{defaultValue:{summary:"default"}}},children:{control:"text",description:"The content of the badge",table:{defaultValue:{summary:""}}}},args:{}},Primary={args:{variant:"default",size:"default",children:"Important"},parameters:{docs:{description:{story:"A primary badge, used for important information."}}}},Secondary={args:{variant:"secondary",children:"Outdated"},parameters:{docs:{description:{story:"A secondary badge, used for less important information."}}}},Destructive={args:{variant:"destructive",children:"Deleted"},parameters:{docs:{description:{story:"A destructive badge, used for destructive information."}}}},Success={args:{variant:"success",children:"Success"},parameters:{docs:{description:{story:"A success badge, used to inform the user that something was successful."}}}},Warning={args:{variant:"warning",children:"Warning"},parameters:{docs:{description:{story:"A warning badge, used to inform the user that something is not right."}}}},Info={args:{variant:"info",children:"Info"},parameters:{docs:{description:{story:"An info badge, used to inform the user of some information."}}}},Outline={args:{variant:"outline",children:"Disabled"},parameters:{docs:{description:{story:"An outline badge, used for less important information."}}}},Small={args:{size:"sm",children:"small info"},parameters:{docs:{description:{story:"A small badge, used for smaller labels."}}}},__namedExportsOrder=["Primary","Secondary","Destructive","Success","Warning","Info","Outline","Small"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"default\",\n    size: \"default\",\n    children: 'Important'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A primary badge, used for important information.'\n      }\n    }\n  }\n}",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"secondary\",\n    children: 'Outdated'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A secondary badge, used for less important information.'\n      }\n    }\n  }\n}",...Secondary.parameters?.docs?.source}}},Destructive.parameters={...Destructive.parameters,docs:{...Destructive.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"destructive\",\n    children: 'Deleted'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A destructive badge, used for destructive information.'\n      }\n    }\n  }\n}",...Destructive.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"success\",\n    children: 'Success'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A success badge, used to inform the user that something was successful.'\n      }\n    }\n  }\n}",...Success.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"warning\",\n    children: 'Warning'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A warning badge, used to inform the user that something is not right.'\n      }\n    }\n  }\n}",...Warning.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"info\",\n    children: 'Info'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'An info badge, used to inform the user of some information.'\n      }\n    }\n  }\n}",...Info.parameters?.docs?.source}}},Outline.parameters={...Outline.parameters,docs:{...Outline.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: \"outline\",\n    children: 'Disabled'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'An outline badge, used for less important information.'\n      }\n    }\n  }\n}",...Outline.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'sm',\n    children: 'small info'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A small badge, used for smaller labels.'\n      }\n    }\n  }\n}",...Small.parameters?.docs?.source}}}},"./node_modules/class-variance-authority/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>cva});var clsx__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs");const falsyToString=value=>"boolean"==typeof value?`${value}`:0===value?"0":value,cx=clsx__WEBPACK_IMPORTED_MODULE_0__.$,cva=(base,config)=>props=>{var _config_compoundVariants;if(null==(null==config?void 0:config.variants))return cx(base,null==props?void 0:props.class,null==props?void 0:props.className);const{variants,defaultVariants}=config,getVariantClassNames=Object.keys(variants).map((variant=>{const variantProp=null==props?void 0:props[variant],defaultVariantProp=null==defaultVariants?void 0:defaultVariants[variant];if(null===variantProp)return null;const variantKey=falsyToString(variantProp)||falsyToString(defaultVariantProp);return variants[variant][variantKey]})),propsWithoutUndefined=props&&Object.entries(props).reduce(((acc,param)=>{let[key,value]=param;return void 0===value||(acc[key]=value),acc}),{}),getCompoundVariantClassNames=null==config||null===(_config_compoundVariants=config.compoundVariants)||void 0===_config_compoundVariants?void 0:_config_compoundVariants.reduce(((acc,param)=>{let{class:cvClass,className:cvClassName,...compoundVariantOptions}=param;return Object.entries(compoundVariantOptions).every((param=>{let[key,value]=param;return Array.isArray(value)?value.includes({...defaultVariants,...propsWithoutUndefined}[key]):{...defaultVariants,...propsWithoutUndefined}[key]===value}))?[...acc,cvClass,cvClassName]:acc}),[]);return cx(base,getVariantClassNames,getCompoundVariantClassNames,null==props?void 0:props.class,null==props?void 0:props.className)}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);